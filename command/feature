#!/bin/bash
#
# feature

feature_main() {
  # delegate arguments to the proper feature function
  # globals:
  #   none
  # arguments:
  #   $1: name of the feature function excluding the preceeding "feature_"
  # returns:
  #   none
  if ! declare -f -F "feature_${1}" > /dev/null; then
    feature_usage
    exit 1
  fi
  feature_${1} "${@:2}"
}

feature_finish() {
  # merge completed feature branch into master
  # globals:
  #   none
  # arguments:
  #   $1: name of the feature branch to finish
  # returns: 
  #   none
  if [[ ${#} < 1 ]]; then
    feature_usage
    exit 1
  fi
  local branch="feature/$1"
  git checkout master
  git merge --no-ff "$branch" -m "finish ${branch}"
  # branch removed by post-commit/merge cleanup
}

feature_publish() {
  # TODO(mraxilus}: implement feature publishing
  echo "feature_publish unimplemented"
}

feature_start() {
  # create new feature branch based off of head of master
  # globals:
  #   none
  # arguments:
  #   $1: name of the feature branch to create
  # returns: 
  #   none
  git checkout -b "feature/${1}" master
}

feature_usage() {
  # print out the usage instructions for git auto feature
  # globals:
  #   none
  # arguments:
  #   none
  # returns:
  #   none
  echo "usage: git auto feature <command> <arg>"
  echo ""
  echo "where available options for <command> are:"
  echo "  finish:  merge feature branch named <arg> into master and delete it"
  echo "  publish: push feature branch named <arg> to origin"
  echo "  start:   create new feature branch named <arg>"
  echo ""
  echo "for more command details run 'git auto <command>'"
}
