#! /bin/sh

# get_latest_version outputs the latest version tag on the release branch
#   $1  get a particular part of the version number (major, minor, build)
get_version() {
  release=$(git tag -l | grep "[0-9]\+\.[0-9]\+\.[0-9]\+" | tail -n 1)
  case "$1" in
    build) echo $(echo $release | sed -n "s/.*\.\([0-9]\+\)$/\1/p")    ;;
    major) echo $(echo $release | sed -n "s/^\([0-9]\+\)\..*/\1/p")    ;;
    minor) echo $(echo $release | sed -n "s/.*\.\([0-9]\+\)\..*/\1/p") ;;
    *)     echo $release                                               ;;
  esac
}

# colorize applies color to string.
#   $1  color code.
#   $2  string.
#
# the color codes are as follows:
#   0  black.
#   1  red.
#   2  green.
#   3  yellow.
#   4  blue.
#   5  magenta.
#   6  cyan.
#   7  white.
colorize() {
  echo -e "$(tput setaf $1)$2$(tput sgr0)";
}

# log logs a colored message to the terminal.
#   $1  color code.
#   $2  message type.
#   $3  string to log.
log() {
  echo -e "$(colorize "$1" "$2"):  $3";
}

# log info message to terminal.
#   $1  string to log.
log_info() {
  log 2 info "$1"
}

# log error message to terminal.
#   $1  string to log.
log_error() {
  log 1 error "$1" >&2
}
