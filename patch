#! /bin/sh

## settings
set -e


## functions
#
finish() {
  branch=$(git branch | sed -n "s/.*\(patch\/.*\)/\1/p")
  version=$(echo $branch | sed "s/patch\///")
  git checkout -q release
  git merge -q --no-ff "$branch"
  git tag -a $version
  git checkout -q master
  git merge -q --no-ff "$branch"
  git branch -qd "$branch"
}

#
publish() {
  # todo: implement patch publishing
  echo "publishing unimplemented"
}

#
start() {
  release=$(git tag -l | grep "[0-9]\+\.[0-9]\+\.[0-9]\+" | tail -n 1)
  major=$(echo $release | sed -n "s/^\([0-9]\+\)\..*/\1/p")
  minor=$(echo $release | sed -n "s/.*\.\([0-9]\+\)\..*/\1/p")
  version="$major.$(($minor + 1)).0"
  git checkout -qb "patch/$version" release
}

#
usage() {
  echo -e "usage: git auto patch <command> <arg>"
  echo -e "\nwhere available options for <command> are:"
  echo -e "  finish\tmerge patch branch named <arg> into master, delete it, and"
  echo -e "        \tcreate a new minor release"
  echo -e "  publish\tpush patch branch named <arg> to origin"
  echo -e "  start\t\tcreate new patch branch named <arg>"
  echo -e "\nfor more command details run 'git auto <command> help'"
}


## main
option=$1
shift

case $option in
  finish)  finish $@  ;;
  publish) publish $@ ;;
  start)   start $@   ;;
  *)       usage      ;;
esac
