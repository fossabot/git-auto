#!/bin/bash
# this file is part of git-auto which is released under the mit license.
# go to http://opensource.org/licenses/mit for full details.

version_main() {
  # delegate arguments to the proper version function
  # globals:
  #   none
  # arguments:
  #   $1: name of the version function excluding the preceeding "version_"
  #   $@: arguments to be provided to delegated version function
  # returns:
  #   none
  if ! declare -f -F "version_${1}" > /dev/null; then
      version_usage
      exit 1
  fi
  version_${1} "${@:2}"
}

version_bump() {
  # increment the specified part of the latest version number
  # globals:
  #   none
  # arguments:
  #   $1: part of latest version number to increment (major, minor, build)
  # returns:
  #   none
  local version
  local major="$(version_show major)"
  local minor="$(version_show minor)"
  local build="$(version_show build)"

  # increment correct version number
  case "${1}" in
    major) version="$(($major + 1)).0.0"           ;;
    minor) version="$major.$(($minor + 1)).0"      ;;
    build) version="$major.$minor.$(($build + 1))" ;;
    *)
      version_usage
      exit 1 ;;
  esac

  # add new tag to current release
  git checkout release
  git tag --annotate "${version}" --message="${2:-bump ${1} version manually}"
}

version_show() {
  # print out latest version number
  # globals:
  #   none
  # arguments:
  #   $1: print out only paticular part of version number (major, minor, build)
  # returns:
  #   none
  local release=$(git tag --list | grep "[0-9]\+\.[0-9]\+\.[0-9]\+" \
    | tail -n 1)
  case "${1}" in
    build) echo $(echo "${release}" | sed -n "s/.*\.\([0-9]\+\)$/\1/p")    ;;
    major) echo $(echo "${release}" | sed -n "s/^\([0-9]\+\)\..*/\1/p")    ;;
    minor) echo $(echo "${release}" | sed -n "s/.*\.\([0-9]\+\)\..*/\1/p") ;;
    *)     echo "${release}"                                               ;;
  esac
}

version_usage() {
  # print out the usage instructions for git auto version
  # globals:
  #   none
  # arguments:
  #   none
  # returns:
  #   none
  echo "usage: git auto version <command> [<arg>]"
  echo ""
  echo "where available options for <command> are:"
  echo "  bump: increment latest version number"
  echo "    where available options for <arg> are:"
  echo "      major: increment major number"
  echo "      minor: increment minor number"
  echo "      build: increment build number"
  echo "  show: show the latest version number"
  echo "    where available options for <arg> are:"
  echo "      major: show major number"
  echo "      minor: show minor number"
  echo "      build: show build number"
  echo ""
  echo "for more command details run 'git auto <command>'"
}
